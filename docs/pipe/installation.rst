Install instructions
--------------------

PIPE uses python3 and requires the following modules: numpy, scipy, astropy

These are easiest to install from e.g. anaconda (https://www.anaconda.com).

PIPE assumes the following directory structure:

Data from DACE is to be put in ``data_root/name/visit/``.
Output will then be put into ``data_root/name/visit/Outdata/version/``
where "version" is a number. Multiple versions can be generated in the Outdata
directory, e.g. from multiple runs with different input parameters.

Reference files are put into ``ref_lib_path/``
E.g., Gain correction file: ``CH_TU2020-02-18T06-15-13_REF_APP_GainCorrection_V0109.fits``
Flat field library: ``flats.fits``
Non-linearity correction: ``nonlin.txt``

Generated PSF-files are put into a subdirectory: ``ref_lib_path/psf_lib/``

as are "eigenlib"s, libraries of principal PSF components, also generated.

data_root and ref_lib_path are defined in pipe_config.py.

Other than that, the PIPE source files need to be accessible in the path.

Usage
-----

PIPE needs a library of PSF principal components to extract PSF photometry.
This "eigen" library is generated from derived PSF functions. The PSF functions
can be derived from several visits to improve their quality, in particular if
the visits are short. By default on PSF function is dervied per CHEOPS orbit,
so long visits will have several PSF functions derived.

For a visit, PSF functions are generated by pc.make_psf_lib() where pc is a
PipeControl object. This is a time consuming process (~ hours) and takes
advantage of multiple CPU cores (up to one thread per PSF being derived).

PCA analysis of the PSFs is fast (a few seconds), and is performed by
pc.make_eigen(psf_lib) where psf_lib is the list of psf functions previously
saved in the pickle file.

Once the eigenlib is generated (it is put into ref_lib_path/psf_lib/ by default)
it can be used for photometric extraction. Input parameters are defined in a
PipeParam object, that is input to a PipeControl object. A commented example on
how these are used is given in reduce_Kelt11.py.
